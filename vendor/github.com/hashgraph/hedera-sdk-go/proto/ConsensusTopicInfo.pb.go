// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/ConsensusTopicInfo.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Current state of a topic.
type ConsensusTopicInfo struct {
	Memo string `protobuf:"bytes,1,opt,name=memo,proto3" json:"memo,omitempty"`
	// SHA-384 running hash <previousRunningHash, topicId, consensusTimestamp, message>
	RunningHash []byte `protobuf:"bytes,2,opt,name=runningHash,proto3" json:"runningHash,omitempty"`
	// Sequence number (starting at 1 for the first submitMessage) of messages on the topic.
	SequenceNumber uint64 `protobuf:"varint,3,opt,name=sequenceNumber,proto3" json:"sequenceNumber,omitempty"`
	// Effective consensus timestamp at (and after) which submitMessage calls will no longer succeed on the topic
	// and the topic will expire and be marked as deleted.
	ExpirationTime       *Timestamp `protobuf:"bytes,4,opt,name=expirationTime,proto3" json:"expirationTime,omitempty"`
	AdminKey             *Key       `protobuf:"bytes,5,opt,name=adminKey,proto3" json:"adminKey,omitempty"`
	SubmitKey            *Key       `protobuf:"bytes,6,opt,name=submitKey,proto3" json:"submitKey,omitempty"`
	AutoRenewPeriod      *Duration  `protobuf:"bytes,7,opt,name=autoRenewPeriod,proto3" json:"autoRenewPeriod,omitempty"`
	AutoRenewAccount     *AccountID `protobuf:"bytes,8,opt,name=autoRenewAccount,proto3" json:"autoRenewAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ConsensusTopicInfo) Reset()         { *m = ConsensusTopicInfo{} }
func (m *ConsensusTopicInfo) String() string { return proto.CompactTextString(m) }
func (*ConsensusTopicInfo) ProtoMessage()    {}
func (*ConsensusTopicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ae45242e2f8a88, []int{0}
}

func (m *ConsensusTopicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusTopicInfo.Unmarshal(m, b)
}
func (m *ConsensusTopicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusTopicInfo.Marshal(b, m, deterministic)
}
func (m *ConsensusTopicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusTopicInfo.Merge(m, src)
}
func (m *ConsensusTopicInfo) XXX_Size() int {
	return xxx_messageInfo_ConsensusTopicInfo.Size(m)
}
func (m *ConsensusTopicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusTopicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusTopicInfo proto.InternalMessageInfo

func (m *ConsensusTopicInfo) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *ConsensusTopicInfo) GetRunningHash() []byte {
	if m != nil {
		return m.RunningHash
	}
	return nil
}

func (m *ConsensusTopicInfo) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ConsensusTopicInfo) GetExpirationTime() *Timestamp {
	if m != nil {
		return m.ExpirationTime
	}
	return nil
}

func (m *ConsensusTopicInfo) GetAdminKey() *Key {
	if m != nil {
		return m.AdminKey
	}
	return nil
}

func (m *ConsensusTopicInfo) GetSubmitKey() *Key {
	if m != nil {
		return m.SubmitKey
	}
	return nil
}

func (m *ConsensusTopicInfo) GetAutoRenewPeriod() *Duration {
	if m != nil {
		return m.AutoRenewPeriod
	}
	return nil
}

func (m *ConsensusTopicInfo) GetAutoRenewAccount() *AccountID {
	if m != nil {
		return m.AutoRenewAccount
	}
	return nil
}

func init() {
	proto.RegisterType((*ConsensusTopicInfo)(nil), "proto.ConsensusTopicInfo")
}

func init() { proto.RegisterFile("proto/ConsensusTopicInfo.proto", fileDescriptor_00ae45242e2f8a88) }

var fileDescriptor_00ae45242e2f8a88 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xe9, 0xdc, 0xe6, 0x96, 0xc9, 0x36, 0x82, 0x4a, 0xd9, 0x41, 0x8a, 0x87, 0xd1, 0xcb,
	0x5a, 0xd0, 0x8b, 0x82, 0x17, 0xe7, 0x0e, 0x1b, 0x03, 0x19, 0x61, 0x27, 0x6f, 0x69, 0xfb, 0x6c,
	0x83, 0x24, 0xa9, 0x4d, 0x82, 0xee, 0x2f, 0xf7, 0x2a, 0x4b, 0x6a, 0xd5, 0xed, 0xf4, 0xc2, 0xef,
	0xfb, 0x3d, 0xf2, 0x25, 0xe8, 0xaa, 0xac, 0xa4, 0x96, 0xf1, 0x93, 0x14, 0x0a, 0x84, 0x32, 0x6a,
	0x2b, 0x4b, 0x96, 0xae, 0xc4, 0xab, 0x8c, 0x6c, 0x80, 0x3b, 0x76, 0x4c, 0x2e, 0x9d, 0x36, 0xa7,
	0x8a, 0xa5, 0xdb, 0x5d, 0x09, 0xca, 0xc5, 0x93, 0x73, 0xc7, 0x17, 0xa6, 0xa2, 0x9a, 0x49, 0x51,
	0xd3, 0x0b, 0x47, 0xb7, 0x8c, 0x83, 0xd2, 0x94, 0x97, 0x0e, 0x5f, 0x7f, 0xb5, 0x10, 0x3e, 0xbe,
	0x08, 0x63, 0xd4, 0xe6, 0xc0, 0xa5, 0xef, 0x05, 0x5e, 0xd8, 0x27, 0xf6, 0x8c, 0x03, 0x34, 0xa8,
	0x8c, 0x10, 0x4c, 0xe4, 0x4b, 0xaa, 0x0a, 0xbf, 0x15, 0x78, 0xe1, 0x19, 0xf9, 0x8b, 0xf0, 0x14,
	0x0d, 0x15, 0xbc, 0x1b, 0x10, 0x29, 0x3c, 0x1b, 0x9e, 0x40, 0xe5, 0x9f, 0x04, 0x5e, 0xd8, 0x26,
	0x07, 0x14, 0xdf, 0xa1, 0x21, 0x7c, 0x96, 0xcc, 0xf5, 0xdb, 0x37, 0xf2, 0xdb, 0x81, 0x17, 0x0e,
	0x6e, 0xc6, 0xae, 0x54, 0xd4, 0x94, 0x24, 0x07, 0x1e, 0x9e, 0xa2, 0x1e, 0xcd, 0x38, 0x13, 0x6b,
	0xd8, 0xf9, 0x1d, 0xbb, 0x83, 0xea, 0x9d, 0x35, 0xec, 0x48, 0x93, 0xe1, 0x10, 0xf5, 0x95, 0x49,
	0x38, 0xd3, 0x7b, 0xb1, 0x7b, 0x24, 0xfe, 0x86, 0xf8, 0x1e, 0x8d, 0xa8, 0xd1, 0x92, 0x80, 0x80,
	0x8f, 0x0d, 0x54, 0x4c, 0x66, 0xfe, 0xa9, 0xf5, 0x47, 0xb5, 0xff, 0xf3, 0x8f, 0xe4, 0xd0, 0xc3,
	0x0f, 0x68, 0xdc, 0xa0, 0xc7, 0x34, 0x95, 0x46, 0x68, 0xbf, 0xf7, 0xef, 0x21, 0x35, 0x5d, 0x2d,
	0xc8, 0x91, 0x39, 0x5f, 0xa2, 0x49, 0x2a, 0x79, 0x54, 0x40, 0x06, 0x15, 0x8d, 0x0a, 0xaa, 0x8a,
	0xbc, 0xa2, 0x65, 0xe1, 0x36, 0x37, 0xde, 0x4b, 0x98, 0x33, 0x5d, 0x98, 0x24, 0x4a, 0x25, 0x8f,
	0x9b, 0x34, 0x76, 0xfa, 0x4c, 0x65, 0x6f, 0xb3, 0x5c, 0xc6, 0xd6, 0x4d, 0xba, 0x76, 0xdc, 0x7e,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x4b, 0xdb, 0x31, 0xb3, 0x38, 0x02, 0x00, 0x00,
}

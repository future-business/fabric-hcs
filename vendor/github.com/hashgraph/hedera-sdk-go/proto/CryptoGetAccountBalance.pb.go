// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/CryptoGetAccountBalance.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Get the balance of a cryptocurrency account. This returns only the balance, so it is a smaller and faster reply than CryptoGetInfo, which returns the balance plus additional information.
type CryptoGetAccountBalanceQuery struct {
	Header *QueryHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are valid to be assigned to BalanceSource:
	//	*CryptoGetAccountBalanceQuery_AccountID
	//	*CryptoGetAccountBalanceQuery_ContractID
	BalanceSource        isCryptoGetAccountBalanceQuery_BalanceSource `protobuf_oneof:"balanceSource"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CryptoGetAccountBalanceQuery) Reset()         { *m = CryptoGetAccountBalanceQuery{} }
func (m *CryptoGetAccountBalanceQuery) String() string { return proto.CompactTextString(m) }
func (*CryptoGetAccountBalanceQuery) ProtoMessage()    {}
func (*CryptoGetAccountBalanceQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_195622b96c4005ba, []int{0}
}

func (m *CryptoGetAccountBalanceQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoGetAccountBalanceQuery.Unmarshal(m, b)
}
func (m *CryptoGetAccountBalanceQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoGetAccountBalanceQuery.Marshal(b, m, deterministic)
}
func (m *CryptoGetAccountBalanceQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoGetAccountBalanceQuery.Merge(m, src)
}
func (m *CryptoGetAccountBalanceQuery) XXX_Size() int {
	return xxx_messageInfo_CryptoGetAccountBalanceQuery.Size(m)
}
func (m *CryptoGetAccountBalanceQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoGetAccountBalanceQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoGetAccountBalanceQuery proto.InternalMessageInfo

func (m *CryptoGetAccountBalanceQuery) GetHeader() *QueryHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type isCryptoGetAccountBalanceQuery_BalanceSource interface {
	isCryptoGetAccountBalanceQuery_BalanceSource()
}

type CryptoGetAccountBalanceQuery_AccountID struct {
	AccountID *AccountID `protobuf:"bytes,2,opt,name=accountID,proto3,oneof"`
}

type CryptoGetAccountBalanceQuery_ContractID struct {
	ContractID *ContractID `protobuf:"bytes,3,opt,name=contractID,proto3,oneof"`
}

func (*CryptoGetAccountBalanceQuery_AccountID) isCryptoGetAccountBalanceQuery_BalanceSource() {}

func (*CryptoGetAccountBalanceQuery_ContractID) isCryptoGetAccountBalanceQuery_BalanceSource() {}

func (m *CryptoGetAccountBalanceQuery) GetBalanceSource() isCryptoGetAccountBalanceQuery_BalanceSource {
	if m != nil {
		return m.BalanceSource
	}
	return nil
}

func (m *CryptoGetAccountBalanceQuery) GetAccountID() *AccountID {
	if x, ok := m.GetBalanceSource().(*CryptoGetAccountBalanceQuery_AccountID); ok {
		return x.AccountID
	}
	return nil
}

func (m *CryptoGetAccountBalanceQuery) GetContractID() *ContractID {
	if x, ok := m.GetBalanceSource().(*CryptoGetAccountBalanceQuery_ContractID); ok {
		return x.ContractID
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CryptoGetAccountBalanceQuery) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CryptoGetAccountBalanceQuery_AccountID)(nil),
		(*CryptoGetAccountBalanceQuery_ContractID)(nil),
	}
}

// Response when the client sends the node CryptoGetAccountBalanceQuery
type CryptoGetAccountBalanceResponse struct {
	Header               *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	AccountID            *AccountID      `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Balance              uint64          `protobuf:"varint,3,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CryptoGetAccountBalanceResponse) Reset()         { *m = CryptoGetAccountBalanceResponse{} }
func (m *CryptoGetAccountBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*CryptoGetAccountBalanceResponse) ProtoMessage()    {}
func (*CryptoGetAccountBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_195622b96c4005ba, []int{1}
}

func (m *CryptoGetAccountBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoGetAccountBalanceResponse.Unmarshal(m, b)
}
func (m *CryptoGetAccountBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoGetAccountBalanceResponse.Marshal(b, m, deterministic)
}
func (m *CryptoGetAccountBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoGetAccountBalanceResponse.Merge(m, src)
}
func (m *CryptoGetAccountBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_CryptoGetAccountBalanceResponse.Size(m)
}
func (m *CryptoGetAccountBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoGetAccountBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoGetAccountBalanceResponse proto.InternalMessageInfo

func (m *CryptoGetAccountBalanceResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CryptoGetAccountBalanceResponse) GetAccountID() *AccountID {
	if m != nil {
		return m.AccountID
	}
	return nil
}

func (m *CryptoGetAccountBalanceResponse) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterType((*CryptoGetAccountBalanceQuery)(nil), "proto.CryptoGetAccountBalanceQuery")
	proto.RegisterType((*CryptoGetAccountBalanceResponse)(nil), "proto.CryptoGetAccountBalanceResponse")
}

func init() {
	proto.RegisterFile("proto/CryptoGetAccountBalance.proto", fileDescriptor_195622b96c4005ba)
}

var fileDescriptor_195622b96c4005ba = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0xb7, 0xfe, 0x59, 0x31, 0x22, 0x6a, 0x40, 0x2d, 0x45, 0x50, 0xd6, 0xcb, 0x22, 0x34,
	0x15, 0xf7, 0x09, 0xb6, 0x2b, 0x58, 0x6f, 0x5a, 0x3d, 0x79, 0x4b, 0xd3, 0xa1, 0x59, 0x74, 0x9b,
	0x90, 0xa4, 0x87, 0xbe, 0x8a, 0x8f, 0xe3, 0x93, 0x89, 0x49, 0x5a, 0xab, 0xb0, 0xb0, 0xa7, 0x21,
	0xf3, 0xfd, 0xbe, 0x99, 0xf9, 0x82, 0xae, 0xa5, 0x12, 0x46, 0x24, 0x0b, 0xd5, 0x4a, 0x23, 0x1e,
	0xc0, 0xcc, 0x19, 0x13, 0x4d, 0x6d, 0x52, 0xfa, 0x41, 0x6b, 0x06, 0xc4, 0xaa, 0x78, 0xd7, 0x96,
	0xe8, 0xcc, 0xb1, 0x29, 0xd5, 0x4b, 0xf6, 0xda, 0x4a, 0xd0, 0x4e, 0x8e, 0xce, 0x5d, 0xff, 0xb9,
	0x01, 0xd5, 0x66, 0x40, 0x4b, 0x50, 0x5e, 0x88, 0x9c, 0x90, 0x83, 0x96, 0xa2, 0xd6, 0x30, 0xd4,
	0x26, 0x5f, 0x01, 0xba, 0x58, 0xb3, 0xd5, 0x0e, 0xc2, 0x37, 0x68, 0xcc, 0xad, 0x21, 0x0c, 0xae,
	0x82, 0xe9, 0xc1, 0x1d, 0x76, 0x46, 0x32, 0x58, 0x93, 0x7b, 0x02, 0xdf, 0xa2, 0x7d, 0xea, 0x46,
	0x3c, 0xde, 0x87, 0x5b, 0x16, 0x3f, 0xf6, 0xf8, 0xbc, 0xeb, 0x67, 0xa3, 0xfc, 0x17, 0xc2, 0x33,
	0x84, 0x98, 0xa8, 0x8d, 0xa2, 0xec, 0xc7, 0xb2, 0x6d, 0x2d, 0x27, 0xde, 0xb2, 0xe8, 0x85, 0x6c,
	0x94, 0x0f, 0xb0, 0xf4, 0x08, 0x1d, 0x16, 0xee, 0xc4, 0x17, 0xd1, 0x28, 0x06, 0x93, 0xcf, 0x00,
	0x5d, 0xae, 0x09, 0xd1, 0x85, 0xc6, 0xf1, 0xbf, 0x1c, 0xa7, 0x7e, 0xcb, 0xdf, 0x5f, 0xe9, 0xa3,
	0x90, 0x0d, 0xa2, 0x0c, 0x83, 0x84, 0x68, 0xcf, 0xdf, 0x64, 0x53, 0xec, 0xe4, 0xdd, 0x33, 0xcd,
	0x50, 0xc4, 0xc4, 0x8a, 0x70, 0x28, 0x41, 0x51, 0xc2, 0xa9, 0xe6, 0x95, 0xa2, 0x92, 0xbb, 0x61,
	0x4f, 0xc1, 0xdb, 0xb4, 0x5a, 0x1a, 0xde, 0x14, 0x84, 0x89, 0x55, 0xd2, 0xab, 0x89, 0xc3, 0x63,
	0x5d, 0xbe, 0xc7, 0x95, 0x48, 0x2c, 0x5b, 0x8c, 0x6d, 0x99, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x78, 0xa6, 0x0f, 0xdd, 0x2d, 0x02, 0x00, 0x00,
}

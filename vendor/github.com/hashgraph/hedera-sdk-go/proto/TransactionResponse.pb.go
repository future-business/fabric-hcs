// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/TransactionResponse.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// When the client sends the node a transaction of any kind, the node replies with this, which simply says that the transaction passed the precheck (so the node will submit it to the network) or it failed (so it won't). If the fee offered was insufficient, this will also contain the amount of the required fee. To learn the consensus result, the client should later obtain a receipt (free), or can buy a more detailed record (not free).
type TransactionResponse struct {
	NodeTransactionPrecheckCode ResponseCodeEnum `protobuf:"varint,1,opt,name=nodeTransactionPrecheckCode,proto3,enum=proto.ResponseCodeEnum" json:"nodeTransactionPrecheckCode,omitempty"`
	Cost                        uint64           `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}         `json:"-"`
	XXX_unrecognized            []byte           `json:"-"`
	XXX_sizecache               int32            `json:"-"`
}

func (m *TransactionResponse) Reset()         { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()    {}
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c1f3e887b135c48, []int{0}
}

func (m *TransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionResponse.Unmarshal(m, b)
}
func (m *TransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionResponse.Marshal(b, m, deterministic)
}
func (m *TransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResponse.Merge(m, src)
}
func (m *TransactionResponse) XXX_Size() int {
	return xxx_messageInfo_TransactionResponse.Size(m)
}
func (m *TransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResponse proto.InternalMessageInfo

func (m *TransactionResponse) GetNodeTransactionPrecheckCode() ResponseCodeEnum {
	if m != nil {
		return m.NodeTransactionPrecheckCode
	}
	return ResponseCodeEnum_OK
}

func (m *TransactionResponse) GetCost() uint64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func init() {
	proto.RegisterType((*TransactionResponse)(nil), "proto.TransactionResponse")
}

func init() {
	proto.RegisterFile("proto/TransactionResponse.proto", fileDescriptor_9c1f3e887b135c48)
}

var fileDescriptor_9c1f3e887b135c48 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x0f, 0x29, 0x4a, 0xcc, 0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x0b, 0x4a, 0x2d,
	0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0xd5, 0x03, 0xcb, 0x08, 0xb1, 0x82, 0x29, 0x29, 0x09, 0x88, 0x3a,
	0x98, 0xa4, 0x73, 0x7e, 0x0a, 0x54, 0x81, 0x52, 0x0b, 0x23, 0x97, 0x30, 0x16, 0xed, 0x42, 0x91,
	0x5c, 0xd2, 0x79, 0xf9, 0x29, 0xa9, 0x48, 0x52, 0x01, 0x45, 0xa9, 0xc9, 0x19, 0xa9, 0xc9, 0xd9,
	0x20, 0xcd, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0xe2, 0x10, 0x43, 0xf4, 0x90, 0xcd, 0x75,
	0xcd, 0x2b, 0xcd, 0x0d, 0xc2, 0xa7, 0x57, 0x48, 0x88, 0x8b, 0x25, 0x39, 0xbf, 0xb8, 0x44, 0x82,
	0x49, 0x81, 0x51, 0x83, 0x25, 0x08, 0xcc, 0x76, 0xf2, 0xe0, 0x92, 0x4a, 0xce, 0xcf, 0xd5, 0xcb,
	0x48, 0x4d, 0x49, 0x2d, 0x4a, 0xd4, 0xcb, 0x48, 0x2c, 0xce, 0x48, 0x2f, 0x4a, 0x2c, 0xc8, 0x80,
	0x98, 0x1f, 0xc0, 0x18, 0xa5, 0x91, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab,
	0x0f, 0x97, 0xd5, 0x87, 0x28, 0xd7, 0x2d, 0x4e, 0xc9, 0xd6, 0x4d, 0xcf, 0xd7, 0x07, 0xab, 0x4d,
	0x62, 0x03, 0x53, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x14, 0x7c, 0x04, 0x77, 0x1b, 0x01,
	0x00, 0x00,
}
